@using Microsoft.AspNet.Identity;
@using Rogue_BT.Helper;
@model Rogue_BT.Models.Ticket

@{
	ViewBag.Title = "Dashboard";
	var ticketHelper = new TicketHelper();
	var projectHelper = new ProjectHelper();
}
@*Show ticket specific data
show some parent project data
show ticket comments
show ticket attachments*@

	<div class="container">
		<div class="row">
			<div class="col-md-offset-1 col-md-10">
				@*Show project data*@
				<p>Project Data</p>
				<br />
				<h2>Project Name: @Model.Project.Name</h2>
				<h2>Project Created: @Model.Project.Created</h2>

			</div>
		</div>
		<div class="row">
			<div class="col-md-12">
				@*show ticket data*@
				<h2>Title: @Model.Title</h2>
				<h2>Priority: @Model.TicketPriority.Name</h2>
				<h2>Status: @Model.TicketStatus.Name</h2>
				<h2>Type: @Model.TicketType.Name</h2>
			</div>
		</div>
		@*<div class="row">
			<div class="col-md-6">
				show ticket comments 
				
			</div>			
			@if (User.IsInRole("Admin") || (User.IsInRole("Developer") && Model.DeveloperId == User.Identity.GetUserId()) || (User.IsInRole("Submitter") && Model.SubmitterId == User.Identity.GetUserId()) || (User.IsInRole("Project Manager") && projectHelper.IsUserOnProject(User.Identity.GetUserId(), Model.ProjectId)))
			{
			<div class="col-md-6">
				show ticket attachments
				a mechanism for adding a new attachment
				@using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "multipart/form-data" }))
				{
					@Html.AntiForgeryToken()
					@Html.Hidden("TicketId", Model.Id)

					<div class="form-group">
						@Html.Label("File Name", htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.Editor("FileName", new { htmlAttributes = new { @class = "form-control" } })
						</div>
					</div>
					<div class="form-group">
						@Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.TextArea("AttachmentDescription", new { htmlAttributes = new { @class = "form-control" } })
						</div>
					</div>
					<div class="form-group">
						@Html.Label("Attatchment", htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							<input type="file" name="file" />
						</div>
					</div>
					<div class="form-group">
						<div class="col-md-offset-2 col-md-10">
							<input type="submit" value="Add Attachment" class="btn btn-primary" style="width:100%" />
						</div>
					</div>
				}
				


				a mechanism for displaying and viewing existing attachments
				<hr />
				<table class="table">
					<thead>

						<tr>
							<th>
								@Html.DisplayName("Icon")
							</th>
							<th>
								@Html.DisplayName("Title")
							</th>

							<th>
								@Html.DisplayName("File Name")
							</th>
						</tr>
					</thead>
					<tbody>

						@foreach (var attachment in Model.Attachments.ToList())
						{
							<tr>
								<td>
									@Html.DisplayFor(modelItem => attachment.FileName)
								</td>
								<td>
									<a target="_blank" href="@attachment.FilePath">@attachment.FilePath</a>
									
								</td>

								
								
							</tr>

						}
					</tbody>
				</table>

			</div>
			}
		</div>*@
	</div>

	<div class="container-fluid">
		<h4>Change History</h4>
		<div class="row">
			<div class="col-6">
				@if (Model.Histories.Count > 0)
				{
				<table class="table">
					<tr>
						
						<th>
							Changed by
						</th>
						<th>
							Property
						</th>
						<th>
							Old Value
						</th>
						<th>
							New Value
						</th>
						<th>
							Changed On
						</th>
						
					</tr>

					@foreach (var item in Model.Histories)
					{
						<tr>
							
							<td>
								@Html.DisplayFor(modelItem => item.User.FirstName)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Property)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.OldValue)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.NewValue)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.ChangedOn)
							</td>
							
						</tr>
					}

				</table>
				}
				else
				{ 
					<h5>No changes have been made.</h5>
				}
			</div>
			<div class="col-6">
				<h4>Attachments</h4>
				<div class="row">
					<div class="col-md-6">
						@*show ticket comments*@

					</div>
					@if (User.IsInRole("Admin") || (User.IsInRole("Developer") && Model.DeveloperId == User.Identity.GetUserId()) || (User.IsInRole("Submitter") && Model.SubmitterId == User.Identity.GetUserId()) || (User.IsInRole("Project Manager") && projectHelper.IsUserOnProject(User.Identity.GetUserId(), Model.ProjectId)))
					{
						<div class="col-md-6">
							@*show ticket attachments*@
							@*a mechanism for adding a new attachment*@
							@using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "multipart/form-data" }))
							{
								@Html.AntiForgeryToken()
								@Html.Hidden("TicketId", Model.Id)

								<div class="form-group">
									@Html.Label("File Name", htmlAttributes: new { @class = "control-label col-md-2" })
									<div class="col-md-10">
										@Html.Editor("FileName", new { htmlAttributes = new { @class = "form-control" } })
									</div>
								</div>
								<div class="form-group">
									@Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
									<div class="col-md-10">
										@Html.TextArea("AttachmentDescription", new { htmlAttributes = new { @class = "form-control" } })
									</div>
								</div>
								<div class="form-group">
									@Html.Label("Attatchment", htmlAttributes: new { @class = "control-label col-md-2" })
									<div class="col-md-10">
										<input type="file" name="file" />
									</div>
								</div>
								<div class="form-group">
									<div class="col-md-offset-2 col-md-10">
										<input type="submit" value="Add Attachment" class="btn btn-primary" style="width:100%" />
									</div>
								</div>
							}



							@*a mechanism for displaying and viewing existing attachments*@
							<hr />
							<table class="table">
								<thead>

									<tr>
										<th>
											@Html.DisplayName("Icon")
										</th>
										<th>
											@Html.DisplayName("Title")
										</th>

										<th>
											@Html.DisplayName("File Name")
										</th>
									</tr>
								</thead>
								<tbody>

									@foreach (var attachment in Model.Attachments.ToList())
									{
										<tr>
											<td>
												@Html.DisplayFor(modelItem => attachment.FileName)
											</td>
											<td>
												<a target="_blank" href="@attachment.FilePath">@attachment.FilePath</a>

											</td>



										</tr>

									}
								</tbody>
							</table>

						</div>
					}
				</div>
			</div>
		</div>
	</div>







<p>There are @Model.Comments.Count() for this Ticket</p>
@if (Model.Comments.Count != 0)
{
	<table class="table">
		<tr>
			<th>
				User
			</th>

			<th>
				Comments
			</th>
			<th>
				Created
			</th>

		</tr>

		@foreach (var item in Model.Comments.OrderByDescending(tc => tc.Created))
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.User.FullName)

				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Comment)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Created)
				</td>

				<td>
					@Html.ActionLink("Edit", "Edit", "TicketComments", new { id = item.Id }) |
					@Html.ActionLink("Details", "Details", "TicketComments", new { id = item.Id }) |
					@Html.ActionLink("Delete", "Delete", "TicketComments", new { id = item.Id })
				</td>
			</tr>
		}

	</table>
}
else
{
	<h3>No comments have been made for this Ticket</h3>
}
<br />
<br />
@if (ticketHelper.CanMakeComment(Model.Id))
{
	using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
	{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">
			<h4>TicketComment</h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.Hidden("TicketId", Model.Id)


			<div class="form-group">
				@Html.Label("Comment", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.TextArea("Comment", new { htmlAttributes = new { @class = "form-control" } })
				</div>
			</div>



			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Create" class="btn btn-default" />
				</div>
			</div>
		</div>
	}

	<div>
		@Html.ActionLink("Back to List", "Index")
	</div>

	@section Scripts {
		@Scripts.Render("~/bundles/jqueryval")
	}

}
<p>
	@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
	@Html.ActionLink("Back to List", "Index")
</p>
